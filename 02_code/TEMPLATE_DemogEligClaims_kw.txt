*
PURPOSE: template for pulling demogrphics eligibility claims and diagnoses from the SQL server

AUTHOR : Carter Sevick
;


* output to raw folder ;
libname raw "";


* all subjects  - modify this part to suit;
* this data should be called finalSubjects and have:
   one column of medicaid IDS called clnt_id
;
proc sql;
create table finalSubjects AS
  select clnt_id
  from ana.finalMatch
  union 
  select control_id
  from ana.finalMatch;
quit;


**********************************************************************;
*** should not need to modify beyond this point***********************;
**********************************************************************;
* connection to the BIDM data repo ;
libname db odbc complete="driver=SQL Server; database=BIDM; server=SOMD-S-SQLDB.ucdenver.pvt" access=readonly schema="ro";/**/

*** variable lengths ***;
  * this will create a macro variable for each variable in the SQL server database containing the maximum required length to contain the data
    in the case that a variable exists in more than one table, the max length will be used ;
%let varlen = \\data.ucdenver.pvt\dept\SOM\FHPC\DATA\HCPF_Data_files_SECURE\HCPF_SqlServer\queries\DBVarLengths;
libname varlen "&varlen";
%include "&varlen\MACRO_charLenMetadata.sas";
%getlen(library=varlen, data=AllVarLengths);

data raw.longitudinal;
  merge qry1.medicaiddemog_bidm(in = a keep=clnt_id dob) qry1.medicaidlong_bidm (in = b) finalSubjects (in = c keep = clnt_id);
  by clnt_id;
  if a and b and c;

  ageEndMon = (intnx('month', month, 0, 'end')-dob)/365.25;
run;

proc sql;

create table raw.demographics as
  select distinct  a.* 
  from qry1.medicaidDemog_bidm as a inner join finalSubjects as b on a.clnt_id = b.clnt_id
   order by clnt_id;

quit;

* subsetting format trick for subjects;
data MysubjFmt;
   set finalSubjects (keep = clnt_id);

   retain hlo " ";
   fmtname = "$MySubj" ;
   type    = "c" ;
   start   = clnt_id;
   label   = 'KEEP';
   output ;
   if eof then do ;
      start = " " ;
      label = " " ;
      hlo   = "o" ;
      output ;
   end ;
run;

proc format cntlin = MysubjFmt;
run;


* claim headers ;
proc sql;

create table raw.clm_headers as
  select ICN_NBR  length = &ICN_NBR , 
         mcaid_id length = &mcaid_id, 
		 ATTD_PROV_LOC_ID length = &ATTD_PROV_LOC_ID,
		 ATTD_PROV_LOC_NM length = &ATTD_PROV_LOC_NM,
REND_PROV_LOC_ID   length = &REND_PROV_LOC_ID,
REND_PROV_LOC_NM   length = &REND_PROV_LOC_NM,
REND_PROV_TYP_CD   length = &REND_PROV_TYP_CD,
REND_PROV_TYP_DESC length = &REND_PROV_TYP_DESC,

BILL_PROV_LOC_ID   length = &BILL_PROV_LOC_ID,
BILL_PROV_LOC_NM   length = &BILL_PROV_LOC_NM,
		 BILL_PROV_TYP_CD length = &BILL_PROV_TYP_CD,

         BILL_PROV_TYP_DESC length = &BILL_PROV_TYP_DESC,

         datepart(FRST_SVC_DT) as FRST_SVC_DT,
         datepart(LST_SVC_DT) as LST_SVC_DT,
		 datepart(DRUG_DSPN_DT) as DRUG_DSPN_DT,

         clm_ctg_cd    length = &clm_ctg_cd,
         CLM_TYP_CD    length = &CLM_TYP_CD, 
         CTG_OF_SVC_CD length = &CTG_OF_SVC_CD, 
         CLNT_CNTY_CD length = &CLNT_CNTY_CD,
         CLNT_CNTY_DESC length = &CLNT_CNTY_DESC,
         pd_amt,
         tpl_pd_amt 
  from  db.CLM_DIM_V  
  where CURR_REC_IND = 'Y'
    and SRC_REC_DEL_IND = 'N'
    and CLM_STS_CD = 'P'
    and most_rcnt_clm_ind = 'Y'
    and enc_ind = 'N'
	and put(mcaid_id, $MySubj. ) = "KEEP"
    /*and CLM_TYP_CD not in ('A','B','C')*/
  order by mcaid_id;

quit;

 ** I ADJUSTED STARTING HERE: ;	
* subsetting format trick for diagnoses and lines;
proc sort data = out.clm_header_1519_group1(keep = ICN_NBR) out=out.icns_group1_1519 nodupkey;
   by ICN_NBR;
run;  

data MyIcnFmt;
   set icns (keep = ICN_NBR);

   retain hlo " ";
   fmtname = "$MyIcns" ;
   type    = "c" ;
   start   = ICN_NBR;
   label   = 'KEEP';
   output ;
   if eof then do ;
      start = " " ;
      label = " " ;
      hlo   = "o" ;
      output ;
   end ;
run;

proc format cntlin = MyIcnFmt;
run;

* diagnoses ;
proc sql;
create table OUT.diagTable_1519_group1 as
  select distinct 
         a.ICN_NBR length = &ICN_NBR,
         a.DIAG_PRSNT_ON_ADMSN_CD  length = &DIAG_PRSNT_ON_ADMSN_CD,
         a.DIAG_CD length = &DIAG_CD,
         a.DIAG_DESC length = &DIAG_DESC,
         a.CD_SET_CD length = &CD_SET_CD,
         a.CD_SET_VER_NBR length = &CD_SET_VER_NBR,
         a.DIAG_SEQ_CD length = &DIAG_SEQ_CD,
         a.DIAG_SEQ_DESC length = &DIAG_SEQ_DESC
  from db.CLM_DIAG_FACT_V as a  
  where a.CURR_REC_IND = 'Y'
    and a.SRC_REC_DEL_IND = 'N'
    and put(ICN_NBR, $MyIcns. ) = "KEEP"
;
quit;

* claim lines ;
 
data out.clm_lines_1519_group1;

  length mcaid_id $ &mcaid_id
         ICN_NBR $ &ICN_NBR
         RVN_CD $ &RVN_CD
         CLM_TYP_CD $ &CLM_TYP_CD 
         pos_cd $ &pos_cd
         DIAG_1_CD $ &DIAG_1_CD
         DIAG_2_CD $ &DIAG_2_CD
         DIAG_3_CD $ &DIAG_3_CD
         DIAG_4_CD $ &DIAG_4_CD
         proc_cd   $ &proc_cd
         PROC_MOD_1_CD $ &PROC_MOD_1_CD 
         PROC_MOD_2_CD  $ &PROC_MOD_2_CD
         PROC_MOD_3_CD  $ &PROC_MOD_3_CD
         PROC_MOD_4_CD $ &PROC_MOD_4_CD
         ATTD_PROV_LOC_ID $ &ATTD_PROV_LOC_ID
         BILL_PROV_MCAID_ID $ &BILL_PROV_MCAID_ID
         BILL_PROV_NPI_ID   $ &BILL_PROV_NPI_ID

         BILL_PROV_LOC_ID   $ &BILL_PROV_LOC_ID
         REND_PROV_LOC_ID   $ &REND_PROV_LOC_ID
         REND_PROV_MCAID_ID $ &REND_PROV_MCAID_ID
         REND_PROV_NPI_ID   $ &REND_PROV_NPI_ID

         BILL_PROV_TYP_CD   $ &BILL_PROV_TYP_CD 
         REND_PROV_TYP_CD   $ &REND_PROV_TYP_CD 

         FAC_PROV_LOC_ID    $ &FAC_PROV_LOC_ID
         SUPV_PROV_LOC_ID    $ &SUPV_PROV_LOC_ID
;

  set db.clm_lne_fact_v (  keep = mcaid_id ICN_NBR  lne_nbr LNE_FRST_SVC_DT LNE_LST_SVC_DT RVN_CD CLM_TYP_CD proc_cd BILL_PROV_MCAID_ID  BILL_PROV_NPI_ID  BILL_PROV_LOC_ID REND_PROV_LOC_ID REND_PROV_MCAID_ID REND_PROV_NPI_ID  ATTD_PROV_LOC_ID BILL_PROV_TYP_CD REND_PROV_TYP_CD FAC_PROV_LOC_ID SUPV_PROV_LOC_ID CURR_REC_IND SRC_REC_DEL_IND pos_cd CLM_STS_CD lne_sts_cd enc_ind most_rcnt_clm_ind
                              PROC_MOD_1_CD PROC_MOD_2_CD PROC_MOD_3_CD PROC_MOD_4_CD DIAG_1_CD DIAG_2_CD DIAG_3_CD DIAG_4_CD BILL_UNT_QTY);
  where CURR_REC_IND = 'Y'
    and SRC_REC_DEL_IND = 'N'
    and CLM_STS_CD = 'P'
    and lne_sts_cd = 'P'
    and most_rcnt_clm_ind = 'Y'
    and enc_ind = 'N'
	and put(ICN_NBR, $MyIcns. ) = "KEEP"
;
             /* variables to ensure the claim is valid and paid: conditioned on in the where statement */
  drop   CURR_REC_IND 
         SRC_REC_DEL_IND 
         CLM_STS_CD 
         lne_sts_cd 
         enc_ind 
         most_rcnt_clm_ind
;

run;

